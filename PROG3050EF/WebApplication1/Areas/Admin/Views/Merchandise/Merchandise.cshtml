@using GameStore.Data.UtilityClasses
@using GameStore.Models.ViewModels
@using GameStore.Models.ExtensionModels
@using GameStore.Data
@using Microsoft.AspNetCore.Mvc
@using GameStore
@using GameStore.Models
@using GameStore.TagHelpers
@using GameStore.Data.Static_Data
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, GameStore


@model MerchandiseViewModel

@{
    // this view is used for add, edit, and delete. 
    // Which one is determined by the action method name.
    var action = ViewContext.RouteData.Values["action"].ToString().Capitalize();

    ViewData["Title"] = $" | {action} Merchandise";

    List<Game> gameList = new List<Game>();
    gameList = ViewBag.Games;
}

<h1>@action Merchandise</h1>

<form asp-action="@action" asp-area="Admin" asp-controller="Merchandise" method="post">
    
    <input type="hidden" asp-for="Merchandise.MerchId" />

    <div class="form-group row">
        <div class="col-sm-2"><label>Name:</label></div>

        @* if deleting, display title in a label and put value in hidden field
           for delete message. Otherwise, provide a text box*@
        @if (Operation.IsDelete(action)) {
            <div class="col-sm-4"><label>@Model.Merchandise.Name</label></div>
            <input type="hidden" asp-for="Merchandise.Name" />
        }
        else {
            <div class="col-sm-4">
                <input asp-for="Merchandise.Name" class="form-control" />
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Merchandise.Name" class="text-danger"></span>
            </div>
        }
    </div>

    @* if not deleting, display text boxes and drop-downs for rest of fields*@
    @if (!Operation.IsDelete(action))
    {


        <div class="form-group row">
            <div class="col-sm-2"><label>Description:</label></div>
            <div class="col-sm-4">
                @*<input asp-for="Game.Description" mode="multiline" class="form-control" />*@

                <textarea asp-for="Merchandise.Description" rows="5" cols="40" class="form-control"></textarea>
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Merchandise.Description" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-2"><label>Price:</label></div>
            <div class="col-sm-4">
                <input asp-for="Merchandise.Price" type="number" step="0.01" class="form-control"  />
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Merchandise.Price" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-2"><label>Quantity:</label></div>
            <div class="col-sm-4">
                <input asp-for="Merchandise.Quantity" type="number" class="form-control"  />
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Merchandise.Quantity" class="text-danger"></span>
            </div>
        </div>

        


        <div class="form-group row">
            <div class="col-sm-2"><label>Game </label></div>
            <div class="col-sm-4">
                <select asp-for="@Model.Merchandise.GameId" class="form-control"
                    asp-items='@new SelectList(gameList, "GameId", "Name", Model.Merchandise.GameId)'>
                </select>
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="@Model.Merchandise.GameId" class="text-danger"></span>
            </div>
        </div>
    }




    <div class="row">
        <div class="col-sm-4 offset-sm-2">
            <button type="submit" class="btn btn-primary">@action</button>

            @* return user to main admin page after add, or to search page otherwise *@
            <a asp-action="List" my-button>Cancel</a>
        </div>
    </div>
   
</form>
